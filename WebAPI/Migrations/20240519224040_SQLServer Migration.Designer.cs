// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Database;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240519224040_SQLServer Migration")]
    partial class SQLServerMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAPI.Database.Project", b =>
                {
                    b.Property<int>("ProjektId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjektId"));

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjektBeschreibung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProjektEnde")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjektName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProjektStart")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ProjektStatus")
                        .HasColumnType("bit");

                    b.Property<int>("PrüferId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int?>("SupervisorMitarbeiterNr")
                        .HasColumnType("int");

                    b.HasKey("ProjektId");

                    b.HasIndex("SupervisorMitarbeiterNr");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("WebAPI.Database.Session", b =>
                {
                    b.Property<string>("SessionKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SessionUserID")
                        .HasColumnType("int");

                    b.HasKey("SessionKey");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("WebAPI.Database.Student", b =>
                {
                    b.Property<int>("Matrikelnummer")
                        .HasColumnType("int");

                    b.Property<bool>("Bewerbungsstatus")
                        .HasColumnType("bit");

                    b.Property<int>("Fakultaet")
                        .HasColumnType("int");

                    b.Property<string>("Nachname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjektId")
                        .HasColumnType("int");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.Property<string>("StudienAbschluss")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Studiengang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vorname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Matrikelnummer");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("WebAPI.Database.Supervisor", b =>
                {
                    b.Property<int>("MitarbeiterNr")
                        .HasColumnType("int");

                    b.Property<int>("Fakultaet")
                        .HasColumnType("int");

                    b.Property<string>("Lehrstuhl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nachname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Raumnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vorname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MitarbeiterNr");

                    b.ToTable("Supervisors");
                });

            modelBuilder.Entity("WebAPI.Database.User", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("AdminRights")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rolle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebAPI.Database.Project", b =>
                {
                    b.HasOne("WebAPI.Database.Supervisor", null)
                        .WithMany("Projekte")
                        .HasForeignKey("SupervisorMitarbeiterNr");
                });

            modelBuilder.Entity("WebAPI.Database.Supervisor", b =>
                {
                    b.Navigation("Projekte");
                });
#pragma warning restore 612, 618
        }
    }
}
